
repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    google()
    jcenter()
}

apply plugin: 'com.android.library'
apply plugin: 'com.kezong.fat-aar'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"


    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        ndk {
            abiFilter 'armeabi-v7a'
        }
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
            }
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    }

}

dependencies {
    //these 3 jars are already provided in preload-runtime, so we dont need them here
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.java-websocket:Java-WebSocket:1.4.0'

    testImplementation 'junit:junit:4.12'
    implementation project(":preloading")
    embed project(":api")
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

task copyJniLibs(type: Copy) {
    from 'src/main/cpp/libs'
    into 'src/main/jniLibs/armeabi-v7a'
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(copyJniLibs)
}
clean.dependsOn 'cleanCopyJniLibs'